
// General utilities ---------------------------------------------------

// Clearfix
// Source: http://nicolasgallagher.com/micro-clearfix-hack/
.clearfix() {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}


// Responsive utilities ------------------------------------------------

// Responsive visibility and invisibility, a la Bootstrap, but these
// support inline display (or whatever you set @display to), except
// for tables -- tables always display like tables.
.make-visible(@display: block) {
  display: @display !important;
  table& { display: table !important }
  tr& { display: table-row !important }
  th&,
  td& { display: table-cell !important }
}

.make-hidden() {
  display: none !important;
}

// Visibility mixins
.visible-xs(@display: block) {
  .make-hidden();
  @media (max-width: @screen-xs-max) {
    .make-visible(@display);
  }
}
.visible-sm(@display: block) {
  .make-hidden();
  @media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) {
    .make-visible(@display);
  }
}
.visible-md(@display: block) {
  .make-hidden();
  @media (min-width: @screen-md-min) and (max-width: @screen-md-max) {
    .make-visible(@display);
  }
}
.visible-lg(@display: block) {
  .make-hidden();
  @media (min-width: @screen-lg-min) {
    .make-visible(@display);
  }
}

// Invisibility mixins
.hidden-xs(@display: block) {
  .make-visible(@display);
  @media (max-width: @screen-xs-max) {
    .make-hidden();
  }
}
.hidden-sm(@display: block) {
  .make-visible(@display);
  @media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) {
    .make-hidden();
  }
}
.hidden-md(@display: block) {
  .make-visible(@display);
  @media (min-width: @screen-md-min) and (max-width: @screen-md-max) {
    .make-hidden();
  }
}
.hidden-lg(@display: block) {
  .make-visible(@display);
  @media (min-width: @screen-lg-min) {
    .make-hidden();
  }
}
